function [Y_next, Y_first] = Ybus_sparse(n_bus, n_branch, branch_imp,...
                                           bus_imp, from, to)
    % Y-bus calculation and storage    
    %{
        REMEMBER: 
        Y_next = [idx value row col NIR NIC]
       Y_first = [idx FIR FIC]
    
        store (Y_next, Y_first, Yij, row, col)
    %}
    
    % initialize the sparse table for Y-bus
    [Y_next, Y_first] = sparse_table.Blank_array();
    
    for i = 1 : n_branch
        % Yij = -(1/(rij + j.xij))/tap-setting 
        [Y_next, Y_first] = sparse_table.store(Y_next, Y_first,...
                                       -(1/(branch_imp(i,1) + ...
                                       1i*(branch_imp(i,2))))/...
                                       branch_imp(i,4), from(i), to(i));

        % Yij = Yji
        [Y_next, Y_first] = sparse_table.store(Y_next, Y_first,...
                                       -(1/(branch_imp(i,1) + ...
                                       1i*(branch_imp(i,2))))/...
                                       branch_imp(i,4), to(i), from(i));
                                   
        % considering tap-setting the admittance matrix looks like
        % Y = [Y/t^2  -Y/t
        %       -Y/t     Y]
        [Y_next, Y_first] = ...
        sparse_table.store(Y_next, Y_first, sparse_table.retrieve(...
                           Y_next, Y_first, from(i), from(i)) + ...
                           ((1/(branch_imp(i,1) + 1i*(branch_imp(i,2))))...
                           /(branch_imp(i,4))^2) + ...
                           1i*0.5*branch_imp(i,3),from(i),from(i));
                                 
        [Y_next, Y_first] = ...
        sparse_table.store(Y_next, Y_first, sparse_table.retrieve(...
                           Y_next, Y_first, to(i), to(i)) + ...
                           (1/(branch_imp(i,1) + 1i*(branch_imp(i,2))))...
                           + 1i*0.5 *branch_imp(i,3),to(i),to(i));
    end

    for i  = 1 : n_bus
        % the individual buses will have their own shunt device 
        % It should also be included in the Y_bus; Yii = Yii + (Gi + j.Bi)
        [Y_next, Y_first] = ...
        sparse_table.store(Y_next, Y_first, sparse_table.retrieve(...
                           Y_next, Y_first, i, i) + bus_imp(i,1) + ... 
                           1i*bus_imp(i,2), i, i);
    end
end